{"version":3,"sources":["slices/user.js","components/LoginForm.tsx","components/home.tsx","store.js","components/AccountForm.tsx","components/AccountRegistration.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","connect","useState","email","setEmail","password","setPassword","error","setError","isLoading","setLoading","dispatch","useDispatch","history","useSelector","useHistory","submit","axios","url","method","data","then","res","role","isLogged","push","exists","useEffect","$","on","e","preventDefault","style","border","width","minWidth","position","top","left","marginRight","transform","padding","fontSize","className","textAlign","marginBottom","id","onSubmit","htmlFor","type","onChange","target","value","disabled","onClick","color","Home","currentUser","files","setFiles","get","console","log","to","file","formData","FormData","append","post","arr","upload","length","map","i","src","path","height","displayFiles","configureStore","reducer","AccountForm","AccountRegistration","user_id","useParams","placeholder","put","saved","replace","App","store","exact","component","LoginForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAEMA,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZC,KAAM,MAERC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,S,EAKcJ,EAAUW,QAA5BL,E,EAAAA,MAEFM,G,EAFSF,OAEI,SAACH,GAAD,OAAWA,EAAMH,KAAKA,OAEjCJ,I,+BC0FAa,qBAvGf,WAAsB,IAAD,EACOC,mBAAS,MADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,MAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGOJ,mBAAS,IAHhB,mBAGZK,EAHY,KAGLC,EAHK,OAIaN,oBAAS,GAJtB,mBAIZO,EAJY,KAIDC,EAJC,KAMbC,EAAWC,cAEXC,GADcC,YAAYd,GAChBe,eAEZC,EAAS,WACX,IAAKb,IAAUE,EAAU,OAAOG,EAAS,sBACzCE,GAAW,GACXO,IAAM,CACJC,IAAK,uCACLC,OAAQ,OACRC,KAAM,CAAEjB,MAAOA,EAAOE,SAAUA,KAC/BgB,MAAK,SAACC,GACP,IAAI9B,EAAO8B,EAAIF,KAAK5B,KAChBA,GACFmB,EACEjB,EAAM,CACJS,MAAOX,EAAKW,MACZoB,KAAM/B,EAAK+B,KACXC,UAAU,KAGdX,EAAQY,KAAK,UAETH,EAAIF,KAAKM,OACXlB,EAAS,kBAETA,EAAS,uBAGbE,GAAW,OAgBf,OAZAiB,qBAAU,WAKR,OAJAC,IAAE,SAASC,GAAG,UAAU,SAAUC,GAChCA,EAAEC,oBAGG,WACLH,IAAE,SAASC,GAAG,UAAU,SAAUC,GAChCA,EAAEC,wBAMN,sBACEC,MAAO,CACLC,OAAQ,iBACRC,MAAO,MACPC,SAAU,QACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,YAAa,OACbC,UAAW,wBACXC,QAAS,OACTC,SAAU,QAEZC,UAAU,+BAbZ,UAcE,oBACEX,MAAO,CAAEY,UAAW,SAAUC,aAAc,QAC5CF,UAAU,YAFZ,mBAKA,uBAAMG,GAAG,OAAOC,SAAU/B,EAA1B,UACE,uBAAOgC,QAAQ,QAAf,mBACA,uBACA,uBACEL,UAAU,QACVM,KAAK,OACL3D,KAAK,QACL4D,SAAU,SAACpB,GAAD,OAAY1B,EAAS0B,EAAEqB,OAAOC,UAE1C,uBACA,uBAAOJ,QAAQ,WAAf,sBACA,uBACA,uBACEL,UAAU,QACVM,KAAK,WACL3D,KAAK,WACL4D,SAAU,SAACpB,GAAD,OAAYxB,EAAYwB,EAAEqB,OAAOC,UAE7C,uBACA,wBACET,UAAU,SACVM,KAAK,SACLI,SAAU5C,EACV6C,QAAStC,EAJX,sBAQF,mBAAGgB,MAAO,CAAEuB,MAAO,MAAOX,UAAW,UAArC,SAAkDrC,U,gBC9FzC,SAASiD,IACtB,IAAMC,EAAc3C,YAAYd,GADH,EAEHE,mBAAmB,IAFhB,mBAEtBwD,EAFsB,KAEfC,EAFe,KAsD7B,OAzBAhC,qBAAU,WACRV,IAAM2C,IAAI,kCAAkCvC,MAAK,SAACC,GAChDqC,EAASrC,EAAIF,MACbyC,QAAQC,IAAIxC,EAAIF,WAEjB,IAqBD,gCACE,8BAnBuB,YAArBqC,EAAYlC,KACP,yCAGL,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMwC,GAAG,iBAAT,8BAEF,6BACE,uBAAOd,KAAK,OAAOC,SAAU,SAACpB,GAAD,OA3C5B,SAACkC,GACZ,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,EAAK,IAC7B/C,IACGmD,KAAK,qCAAsCH,GAC3C5C,MAAK,SAACC,GACLqC,GAAS,SAACU,GAAD,4BAAkBA,GAAlB,CAAuB/C,EAAIF,aAqCMkD,CAAOxC,EAAEqB,OAAOO,mBAU5D,qBAAKf,UAAU,yBAAf,SA3Ce,WACjB,GAAIe,EAAMa,OACR,OAAOb,EAAMc,KAAI,SAACR,EAAMS,GACtB,OACE,wBAEEC,IAAK,yBAA2BV,EAAKW,KACrCzC,MAAM,QACN0C,OAAO,SAHFH,MAsC8BI,QClEhCC,kBAAe,CAC5BC,QAAS,CACPvF,KAAMJ,EAAU2F,WC0BLC,MA5Bf,WAAwB,IAAD,EACK9E,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,KAarB,OACE,gCACE,uBAAO4C,QAAQ,QAAf,mBACA,uBACEC,KAAK,QACL3D,KAAK,QACL4D,SAAU,SAACpB,GAAD,OAAO1B,EAAS0B,EAAEqB,OAAOC,UAErC,wBAAQH,KAAK,SAASK,QAAS,WAjBjCrC,IACGmD,KAAK,qCAAsC,CAC1CjE,MAAOA,IAERkB,MAAK,SAACC,GACLuC,QAAQC,IAAIxC,OAYd,wBCcS2D,MA3Bf,WAAgC,IAAD,EACG/E,mBAAS,IADZ,mBACtBG,EADsB,KACZC,EADY,KAErB4E,EAAiCC,cAAjCD,QACFrE,EAAUE,cAWhB,OACE,gCACE,0CACA,uBACEkC,KAAK,WACLmC,YAAY,gBACZlC,SAAU,SAACpB,GAAD,OAAOxB,EAAYwB,EAAEqB,OAAOC,UAExC,wBAAQE,QAjBC,WACXrC,IACGoE,IAAI,2CAA6CH,EAAS,CACzD7E,SAAUA,IAEXgB,MAAK,SAACC,GACDA,EAAIF,KAAKkE,OAAOzE,EAAQ0E,QAAQ,SAWtC,0BCJSC,MAnBf,WAAgB,IAAD,EACWtF,mBAAS,IADpB,mBAGb,OAHa,UAIX,cAAC,IAAD,UACE,cAAC,IAAD,CAAUuF,MAAOA,EAAjB,SACE,qBAAK9C,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgC,KAAK,IAAIe,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOjB,KAAK,QAAQgB,UAAWnC,IAC/B,cAAC,IAAD,CAAOmB,KAAK,iBAAiBgB,UAAWX,IACxC,cAAC,IAAD,CAAOL,KAAK,qBAAqBgB,UAAWV,cCPzCY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95bcf62f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login, selectUser } from \"../slices/user\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nfunction LoginForm() {\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(selectUser);\r\n  const history = useHistory();\r\n\r\n  var submit = () => {\r\n    if (!email || !password) return setError(\"Fill in the fields\");\r\n    setLoading(true);\r\n    axios({\r\n      url: \"http://localhost:3001/api/user/login\",\r\n      method: \"POST\",\r\n      data: { email: email, password: password }\r\n    }).then((res) => {\r\n      let user = res.data.user;\r\n      if (user) {\r\n        dispatch(\r\n          login({\r\n            email: user.email,\r\n            role: user.role,\r\n            isLogged: true\r\n          })\r\n        );\r\n        history.push(\"/home\");\r\n      } else {\r\n        if (res.data.exists) {\r\n          setError(\"Wrong password\");\r\n        } else {\r\n          setError(\"User does not exist\");\r\n        }\r\n      }\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    $(\"#form\").on(\"submit\", function (e) {\r\n      e.preventDefault();\r\n    });\r\n\r\n    return () => {\r\n      $(\"#form\").on(\"submit\", function (e) {\r\n        e.preventDefault();\r\n      });\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: \"1px solid #ccc\",\r\n        width: \"33%\",\r\n        minWidth: \"300px\",\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        padding: \"50px\",\r\n        fontSize: \"20px\"\r\n      }}\r\n      className=\"h-auto grid-rows-1 shadow-xl\">\r\n      <h2\r\n        style={{ textAlign: \"center\", marginBottom: \"30px\" }}\r\n        className=\"text-4xl \">\r\n        Login\r\n      </h2>\r\n      <form id=\"form\" onSubmit={submit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <br />\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          onChange={(e: any) => setEmail(e.target.value)}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <br />\r\n        <input\r\n          className=\"input\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={(e: any) => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <button\r\n          className=\"submit\"\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          onClick={submit}>\r\n          Login\r\n        </button>\r\n      </form>\r\n      <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(LoginForm);\r\n","import { useSelector } from 'react-redux';\r\nimport { selectUser } from '../slices/user';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport interface IFiles {\r\n  title: string;\r\n  dateAdded: string;\r\n  path: string;\r\n}\r\n\r\nexport default function Home() {\r\n  const currentUser = useSelector(selectUser);\r\n  const [files, setFiles] = useState<IFiles[]>([]);\r\n\r\n  let upload = (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file[0]);\r\n    axios\r\n      .post('http://localhost:3001/api/file/new', formData)\r\n      .then((res: any) => {\r\n        setFiles((arr: any) => [...arr, res.data]);\r\n      });\r\n  };\r\n\r\n  let displayFiles = () => {\r\n    if (files.length) {\r\n      return files.map((file, i) => {\r\n        return (\r\n          <iframe\r\n            key={i}\r\n            src={'http://localhost:3001/' + file.path}\r\n            width='300px'\r\n            height='450px'\r\n          ></iframe>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/api/file').then((res: any) => {\r\n      setFiles(res.data);\r\n      console.log(res.data);\r\n    });\r\n  }, []);\r\n\r\n  function renderView() {\r\n    if (currentUser.role === 'company') {\r\n      return <h1>Company</h1>;\r\n    } else {\r\n      return (\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to='/companies/add'>Create Account</Link>\r\n            </li>\r\n            <li>\r\n              <input type='file' onChange={(e) => upload(e.target.files)} />\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div>{renderView()}</div>\r\n      <div className='grid grid-cols-6 gap-4'>{displayFiles()}</div>\r\n    </div>\r\n  );\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userSlice from \"./slices/user\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userSlice.reducer\r\n  }\r\n});\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction AccountForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  var submit = () => {\r\n    axios\r\n      .post(\"http://localhost:3001/api/user/new\", {\r\n        email: email\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <button type=\"submit\" onClick={() => submit()}>\r\n        Create\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountForm;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AccountRegistration() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const { user_id }: { user_id: string } = useParams();\r\n  const history = useHistory();\r\n\r\n  var submit = () => {\r\n    axios\r\n      .put(\"http://localhost:3001/api/user/register/\" + user_id, {\r\n        password: password\r\n      })\r\n      .then((res) => {\r\n        if (res.data.saved) history.replace(\"/\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Your Password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={submit}>Register</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountRegistration;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport Home from \"./components/home\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AccountForm from \"./components/AccountForm\";\r\nimport AccountRegistration from \"./components/AccountRegistration\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={LoginForm} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/companies/add\" component={AccountForm} />\r\n            <Route path=\"/register/:user_id\" component={AccountRegistration} />\r\n          </Switch>\r\n        </div>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}